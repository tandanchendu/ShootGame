[1,["9buP9mXHhMTrXmKFlxAScz@f9941","9eR/tZ8vJJVbh+TUuGNhl0","0fuy2xX8ZLL5hk4KN1wqms@f9941","ffveKOqPxC36TqH1bnOO7f@f9941","13rLpLvTpJG5cSsnhEv76I@f9941","b5TqxL/btBwoDoqnyJwG3J@f9941","8crLeK1JBBi5TKekdw3liK","4dUSqR6XBNf5JayJlLF3JC@f9941","9ahMwzfadGV5p3ObGTGsYU","51RWbedctHi7n4xgzgJknw","9buP9mXHhMTrXmKFlxAScz@6c48a"],["node","_spriteFrame","_target","_normalSprite","_customMaterial","_effectAsset","root","data","_parent","_clip","_textureSource"],[["cc.Node",["_name","_layer","_objFlags","_active","_components","_prefab","_parent","_lpos","_children","_lscale"],-1,9,4,1,5,2,5],["cc.Widget",["_alignFlags","_originalHeight","_originalWidth","_bottom","_top","node","__prefab"],-2,1,4],["cc.Sprite",["_type","_sizeMode","node","__prefab","_spriteFrame","_customMaterial","_color"],1,1,4,6,6,5],["cc.Layout",["_layoutType","_spacingY","_affectedByScale","_verticalDirection","node","__prefab"],-1,1,4],"cc.SpriteFrame",["cc.AudioClip",["_name","_native","_duration"],0],["cc.Prefab",["_name"],2],["cc.UITransform",["node","__prefab","_contentSize"],3,1,4,5],["cc.CompPrefabInfo",["fileId"],2],["cc.AudioSource",["_loop","node","__prefab","_clip"],2,1,4,6],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.Button",["_transition","node","__prefab","_normalColor","_hoverColor","_pressedColor","_target","_normalSprite"],2,1,4,5,5,5,1,6],["cc.Label",["_string","_actualFontSize","_fontSize","_overflow","_enableWrapText","_cacheMode","node","__prefab","_color"],-3,1,4,5],["cc.Material",["_name","_states","_defines","_props"],0,12],["cc.EffectAsset",["_name","combinations","shaders","techniques"],-1]],[[8,0,2],[7,0,1,2,1],[10,0,1,2,3,4,5,5],[2,0,1,2,3,6,4,3],[2,2,3,4,1],[11,0,1,2,3,4,5,6,7,2],[12,0,1,2,3,4,5,6,7,8,7],[0,0,3,1,6,8,4,5,7,4],[0,0,1,6,4,5,3],[0,0,1,6,4,5,7,9,3],[0,0,2,1,6,4,5,7,4],[0,0,1,6,8,4,5,7,3],[2,0,1,2,3,5,4,3],[13,0,1,2,3,4],[5,0,1,2,4],[6,0,2],[0,0,1,8,4,5,3],[0,0,1,4,5,3],[0,0,1,6,4,5,7,3],[0,0,2,1,6,4,5,4],[1,0,2,1,5,6,4],[1,0,3,1,5,6,4],[1,0,1,5,6,3],[1,0,4,5,6,3],[9,0,1,2,3,2],[3,0,1,3,2,4,5,5],[3,0,1,2,4,5,4],[14,0,1,2,3,5]],[[[[14,"music_menu",".mp3",25.443265],-1],0,0,[],[],[]],[[[15,"LoginView"],[16,"LoginView",33554432,[-5,-6,-7],[[1,-2,[0,"5cljTZYX5C+a8N5pZMnNNg"],[5,1280,720]],[20,45,99.9,100,-3,[0,"31TOscStJDlJJNN6eA4vXd"]],[24,true,-4,[0,"96JMGSKVlI05dCcmH8kAS7"],19]],[2,"c46/YsCPVOJYA4mWEpNYRx",null,null,null,-1,0]],[11,"SpriteTop",33554432,1,[-12,-13,-14,-15],[[1,-8,[0,"39EuRT8hpMP5x8wDJj7HzH"],[5,600,450]],[12,1,0,-9,[0,"98J/+MIp5Nzam2NGUN5IJ/"],12,13],[21,17,135,450,-10,[0,"b8qffO94VMEbHUX7SzFF9F"]],[25,2,1,0,true,-11,[0,"5fNAY5jplJ+qXmFzvd8n/T"]]],[2,"fadE+DZFdMOp1Ey8styiZJ",null,null,null,1,0],[1,0,135,0]],[7,"SpriteBottom",false,33554432,1,[-20],[[1,-16,[0,"23IVK7+GdK5Yz71qVZpCDc"],[5,600,200]],[12,1,0,-17,[0,"f4x95ODUhOo7SlfIbH3NzX"],17,18],[22,20,450,-18,[0,"9f0bkfkhBFNqNa4XXb4noQ"]],[26,2,1,true,-19,[0,"a1KMMDw5lKj74PBrcbIvkt"]]],[2,"6dhw6XQfBNI5ZhkpauSs1d",null,null,null,1,0],[1,0,-260,0]],[7,"setting",false,33554432,2,[-22,-23,-24],[[1,-21,[0,"8eBYeqJjBLSZO1zXpTqPRK"],[5,600,77]]],[2,"batysB7d5DlKvwQRXN0ee6",null,null,null,1,0],[1,0,-186.5,0]],[8,"btn",33554432,4,[[1,-25,[0,"670nP5rZtDcLSxD82ui/Hh"],[5,600,77]],[3,1,0,-26,[0,"caxHYsse1MR4E+Dl8cLAQx"],[4,1073741824],0],[5,1,-28,[0,"c7lNu4tuhHm5tEQ04ZezkB"],[4,1073741824],[4,3221225471],[4,3238002687],-27,1]],[2,"dfx4/ZxolG6YR7bKxrKb0a",null,null,null,1,0]],[7,"demos",false,33554432,2,[-30,-31,-32],[[1,-29,[0,"dfv/2YMgRChrLzspL0kCrX"],[5,600,77]]],[2,"52S52Byh9O/omUHDYweab5",null,null,null,1,0],[1,0,-186.5,0]],[8,"btn",33554432,6,[[1,-33,[0,"4cWBQs4sdIAbTxdDRP2U6y"],[5,600,77]],[3,1,0,-34,[0,"cfzK4tiqdHyJT8KOhdaYaM"],[4,1073741824],3],[5,1,-36,[0,"4aOJ1556xKe6H2qhHz+phG"],[4,1073741824],[4,3221225471],[4,3238002687],-35,4]],[2,"f5F6+NikdDQIOYWZLLczuw",null,null,null,1,0]],[7,"editor",false,33554432,2,[-38,-39,-40],[[1,-37,[0,"f3zX4CjHNKaY+Dow+YxxjX"],[5,600,77]]],[2,"52HlCcTBdKSbnl2h9ls19N",null,null,null,1,0],[1,0,-186.5,0]],[8,"btn",33554432,8,[[1,-41,[0,"89oJ9lZXlDI4yL6Y8BPm2M"],[5,600,77]],[3,1,0,-42,[0,"70YcrjkxFG5bh6tPx7G4AE"],[4,1073741824],6],[5,1,-44,[0,"b6vdmCGXNKWbSNNDzjQQaj"],[4,1073741824],[4,3221225471],[4,3238002687],-43,7]],[2,"d2zfsn3dFF94FJ4ATqobTk",null,null,null,1,0]],[11,"play",33554432,2,[-46,-47,-48],[[1,-45,[0,"841F1RsjRCY4PEDm7ZzU5z"],[5,600,77]]],[2,"faxVOX+UNDzIPUWbQWLlRC",null,null,null,1,0],[1,0,-186.5,0]],[8,"btn",33554432,10,[[1,-49,[0,"0cca+3YWBHGaQUwpNUJ85A"],[5,600,77]],[3,1,0,-50,[0,"75U7j5ZsJJ9ap2/sYzCTPA"],[4,1073741824],9],[5,1,-52,[0,"33lc9S5OBLj47zrUpDWcqF"],[4,1073741824],[4,3221225471],[4,3238002687],-51,10]],[2,"f8+NGiZLBMNaUGC0m7FYhx",null,null,null,1,0]],[17,"btn",33554432,[[1,-53,[0,"a4z5o1b9JLLokOup2HDpqR"],[5,600,77]],[3,1,0,-54,[0,"bcDuGYQxJFpr+iPVLVvcYF"],[4,1073741824],15],[5,1,-56,[0,"27u/Qm6IpP0Z1Tef3Yzowa"],[4,1073741824],[4,3221225471],[4,3238002687],-55,16]],[2,"38fITqGTNFfZALyv8d2YGP",null,null,null,1,0]],[18,"gui_logo",33554432,1,[[1,-57,[0,"edLq736fpJSZtVEyrgreDm"],[5,511,102]],[4,-58,[0,"767WT4YANCCa5JWeYfbU0/"],14],[23,17,10,-59,[0,"5fP0cWZh9C8bgjASGuV0Q0"]]],[2,"a62FvJhNJCs7s0ZSwrqVE9",null,null,null,1,0],[1,0,299,0]],[11,"quit",33554432,3,[12,-61],[[1,-60,[0,"90QNiAZZVG0IyjhaT3wnMH"],[5,600,77]]],[2,"33p1ax+uFC/IFwf0t1LVmG",null,null,null,1,0],[1,0,61.5,0]],[9,"settings",33554432,4,[[1,-62,[0,"1bMmJaxu5JyaRfAr9poUFE"],[5,512,128]],[4,-63,[0,"3fGtMXBzZCk6vAd2bFjM03"],2]],[2,"80T6ZbwU1Isofuw2xxd5I+",null,null,null,1,0],[1,145,0,0],[1,0.6,0.6,1]],[10,"LabelSetting",512,33554432,4,[[1,-64,[0,"74Cqfe7adL1YAqSLTjqaJx"],[5,100,40]],[6,"Setting",30,30,1,false,1,-65,[0,"31QhehKzFN/JsKHj5KlonS"],[4,4278190080]]],[2,"f6sVpsJVVI5ZsTKvyyWFcw",null,null,null,1,0],[1,-120,0,0]],[9,"demos",33554432,6,[[1,-66,[0,"33ON8Q/PFNXJTLzhQwj07B"],[5,512,128]],[4,-67,[0,"45rMMk5MdLg6lauMk6kOTE"],5]],[2,"b1cdDk545Oc5uMp3UH82Gg",null,null,null,1,0],[1,145,0,0],[1,0.6,0.6,1]],[10,"LabelDemos",512,33554432,6,[[1,-68,[0,"0c3ys59G5PjYkszfX1xfNv"],[5,100,40]],[6,"Demos",30,30,1,false,1,-69,[0,"747yAWBi9MOq05C84ZWbYx"],[4,4278190080]]],[2,"49p8DgMhhFA5hS3SnzbstS",null,null,null,1,0],[1,-120,0,0]],[9,"editor",33554432,8,[[1,-70,[0,"d8iQrQ611F64yDDhIdWKw5"],[5,512,128]],[4,-71,[0,"d7viVQuRpKe4twmg4+s3Bx"],8]],[2,"8chdwW21RDxaKwbMmib0WZ",null,null,null,1,0],[1,145,0,0],[1,0.6,0.6,1]],[10,"LabelEditor",512,33554432,8,[[1,-72,[0,"27wbnjZyxC1q3uoExoNjJ5"],[5,100,40]],[6,"Editor",30,30,1,false,1,-73,[0,"00vr87CpRBFrpUgnNYMC36"],[4,4278190080]]],[2,"643BbTTv9BHoFP+DWHb/Ja",null,null,null,1,0],[1,-120,0,0]],[9,"play_game",33554432,10,[[1,-74,[0,"6bSL2vhsNB1pbnTCGqLWLq"],[5,512,128]],[4,-75,[0,"8eNnGW4ENHM4Eo6FmH/49t"],11]],[2,"69tQC3G4NMFZRfUKQutlJ9",null,null,null,1,0],[1,145,0,0],[1,0.6,0.6,1]],[10,"LabelPlay",512,33554432,10,[[1,-76,[0,"55IYuHKMhFHIOP5Tty+q7T"],[5,100,40]],[6,"Play",30,30,1,false,1,-77,[0,"f382QsHmdLe5XmW9b6+jjn"],[4,4278190080]]],[2,"faD8W2ycJAo7X9Y77wlllB",null,null,null,1,0],[1,-120,0,0]],[19,"LabelSetting",512,33554432,14,[[1,-78,[0,"fagQsjdRdClIVW1TJfRizt"],[5,100,40]],[6,"Quit",30,30,1,false,1,-79,[0,"16grJ/8vZG94nu+2p6WaFt"],[4,4278190080]]],[2,"39CvECPaxGmqGHt3GCIcDU",null,null,null,1,0]]],0,[0,6,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,13,0,-3,3,0,0,2,0,0,2,0,0,2,0,0,2,0,-1,4,0,-2,6,0,-3,8,0,-4,10,0,0,3,0,0,3,0,0,3,0,0,3,0,-1,14,0,0,4,0,-1,5,0,-2,15,0,-3,16,0,0,5,0,0,5,0,2,5,0,0,5,0,0,6,0,-1,7,0,-2,17,0,-3,18,0,0,7,0,0,7,0,2,7,0,0,7,0,0,8,0,-1,9,0,-2,19,0,-3,20,0,0,9,0,0,9,0,2,9,0,0,9,0,0,10,0,-1,11,0,-2,21,0,-3,22,0,0,11,0,0,11,0,2,11,0,0,11,0,0,12,0,0,12,0,2,12,0,0,12,0,0,13,0,0,13,0,0,13,0,0,14,0,-2,23,0,0,15,0,0,15,0,0,16,0,0,16,0,0,17,0,0,17,0,0,18,0,0,18,0,0,19,0,0,19,0,0,20,0,0,20,0,0,21,0,0,21,0,0,22,0,0,22,0,0,23,0,0,23,0,7,1,12,8,14,79],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,3,1,1,3,1,1,3,1,1,3,1,4,1,1,1,3,4,1,9],[0,0,2,0,0,3,0,0,4,0,0,5,6,0,7,0,0,8,0,9]],[[[13,"materialTop",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true}],[[[{},"endColor",8,[4,1056964608]]],11]]],0,0,[0],[5],[1]],[[[13,"materialBottom",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true}],[[[{},"startColor",8,[4,1056964608]]],11]]],0,0,[0],[5],[1]],[[{"name":"roundRect","rect":{"x":0,"y":0,"width":50,"height":50},"offset":{"x":0,"y":0},"originalSize":{"width":50,"height":50},"rotated":false,"capInsets":[10,10,10,10],"vertices":{"rawPosition":[-25,-25,0,25,-25,0,-25,25,0,25,25,0],"indexes":[0,1,2,2,1,3],"uv":[0,50,50,50,0,0,50,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-25,"y":-25,"z":0},"maxPos":{"x":25,"y":25,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[4],0,[0],[10],[10]],[[[27,"../effect/gradient",[{}],[{"hash":1824747951,"name":"../effect/gradient|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Constant","stageFlags":16,"binding":1,"members":[{"name":"startColor","type":16,"count":1},{"name":"endColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":["USE_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Constant","stageFlags":16,"binding":1,"members":[{"name":"startColor","type":16,"count":1},{"name":"endColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":1,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nlayout(std140) uniform Constant {\n  vec4 startColor;\n  vec4 endColor;\n};\nin vec4 color;\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    o *= mix(startColor,endColor,uv0.y);\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\n    uniform vec4 startColor;\n    uniform vec4 endColor;\nvarying vec4 color;\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    o *= mix(startColor,endColor,uv0.y);\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":3}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"}]}],[{"passes":[{"program":"../effect/gradient|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"startColor":{"type":16,"value":[0,0,0,0]},"endColor":{"type":16,"value":[0,0,0,0]}}}]}]]],0,0,[],[],[]]]]
